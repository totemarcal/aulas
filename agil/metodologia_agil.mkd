# Metodologia √Ågil com Scrum

## **Scrum ‚Äì Valores Fundamentais**

Link de refer√™ncia: https://www.gov.br/mec/pt-br/acesso-a-informacao/institucional/estrutura-organizacional/orgaos-especificos-singulares/secretaria-executiva/stic/documentos/mdsagil_mec_v1-1_dez22.pdf

No Scrum, a **profici√™ncia no processo** n√£o depende apenas de seguir pr√°ticas e eventos prescritos. Ela √© conquistada quando as equipes **adotam** e **refletem** sobre os **valores √°geis**, utilizando-os como base para explorar novos comportamentos e evoluir continuamente o processo de desenvolvimento.

Esses valores funcionam como um **guia cultural** para o time, ajudando a criar **clareza** na forma de trabalhar, construir **identidade** e agir de forma alinhada aos princ√≠pios da melhoria cont√≠nua. Quando seguidos, eles tamb√©m ajudam a **evitar falhas no produto**.

---

### **Os Cinco Valores do Scrum**

Segundo o *Scrum Guide*, os valores fundamentais s√£o:

1. **Compromisso**
   Cada membro do time se compromete com os objetivos do projeto e com a entrega de valor para o cliente.

   * Entregar o que foi prometido.
   * Ser respons√°vel pela pr√≥pria contribui√ß√£o.

2. **Coragem**
   O time precisa ter coragem para:

   * Tomar decis√µes dif√≠ceis.
   * Enfrentar problemas e riscos.
   * Experimentar novas abordagens sem medo de falhar.

3. **Foco**
   Concentrar esfor√ßos no trabalho mais importante para atingir as metas da Sprint e do produto.

   * Evitar distra√ß√µes.
   * Priorizar entregas de maior valor.

4. **Abertura**
   Estar disposto a compartilhar informa√ß√µes, receber feedback e manter a transpar√™ncia no processo.

   * Comunica√ß√£o clara e constante.
   * Troca de ideias sem barreiras.

5. **Respeito**
   Reconhecer o valor e as contribui√ß√µes de cada membro do time.

   * Valorizar diferentes perspectivas.
   * Criar um ambiente colaborativo e saud√°vel.


---

# **Scrum ‚Äì Pap√©is no Time √Ågil**

O **Time √Ågil** √© composto essencialmente por tr√™s pap√©is:

1. **Gerente do Produto (Product Owner)**
2. **Scrum Master**
3. **Time de Desenvolvimento**

> üìå Esses pap√©is descrevem responsabilidades, e **n√£o cargos formais**. Qualquer pessoa na organiza√ß√£o pode assumir um desses pap√©is, desde que tenha as habilidades e responsabilidades exigidas.

---

## **Princ√≠pios Comuns a Todos os Pap√©is**

* Trabalhar **como um time pequeno e auto-organizado**.
* **Compartilhar responsabilidades**, colaborar e se comunicar com clareza.
* Focar na **entrega de valor cont√≠nua e incremental**.
* Aprender e melhorar a cada entrega.
* Compartilhar aprendizados com o time e com as partes interessadas.

---

## **1. Gerente do Produto (Product Owner)**

**Miss√£o:** Representar o cliente e o neg√≥cio dentro do Time √Ågil, garantindo que o produto entregue gere o **m√°ximo de valor**.

**Principais responsabilidades:**

* Representar necessidades e prioridades do neg√≥cio.
* Priorizar e gerenciar o **Backlog do Produto**.
* Transformar a estrat√©gia e os requisitos do neg√≥cio em **Hist√≥rias de Usu√°rio** e especifica√ß√µes.
* Manter contato constante com o Time de Desenvolvimento para tirar d√∫vidas e resolver impedimentos de neg√≥cio.
* Planejar e organizar continuamente as pr√≥ximas Sprints.
* Apresentar o incremento na **Sprint Review** e coletar feedback.
* Garantir que **cada produto tenha um √∫nico Product Owner**.

**Requisitos:**

* Alto conhecimento do neg√≥cio e do produto.
* Disponibilidade para detalhar backlog e apoiar o time continuamente.
* Capacidade de definir prioridades alinhadas ao ROI e ao **time to market**.

---

## **2. Scrum Master**

**Miss√£o:** Garantir que a metodologia √°gil seja seguida, atuando como **l√≠der-servidor** e facilitador do processo.

**Principais responsabilidades:**

* Assegurar que pap√©is, cerim√¥nias e artefatos do Scrum sejam respeitados.
* Remover impedimentos e facilitar o trabalho do time.
* Promover a melhoria cont√≠nua e novas pr√°ticas √°geis.
* Mediar conflitos e promover mudan√ßas culturais e comportamentais.
* Acompanhar m√©tricas como Lead Time, Cycle Time, Velocity, Story Points e WIP.
* Ser o ‚Äúembaixador √°gil‚Äù na organiza√ß√£o.
* Apoiar o Product Owner na comunica√ß√£o com o time e stakeholders.

**Caracter√≠sticas:**

* N√£o chefia, mas lidera pelo exemplo.
* Pode acumular outro papel em casos excepcionais (part-time).
* Adapta sua atua√ß√£o conforme a maturidade e contexto do time.

---

## **3. Time de Desenvolvimento**

**Miss√£o:** Transformar o **Backlog do Produto** em incrementos de valor que possam ser entregues.

**Caracter√≠sticas:**

* Composto por profissionais de v√°rias disciplinas da Engenharia de Software.
* N√£o h√° hierarquia interna: todos compartilham responsabilidade pelo produto.
* Time ideal: **3 a 9 desenvolvedores** (no total do time √°gil, 5 a 11 pessoas).

**Principais responsabilidades:**

* Definir, junto ao PO, a **Meta da Sprint** e o que ser√° realizado.
* Planejar como o trabalho ser√° feito.
* Executar garantindo a qualidade.
* Reportar impedimentos ao Scrum Master.
* Respeitar processos e cerim√¥nias do Scrum.
* Promover pr√°ticas como **TDD, BDD, Integra√ß√£o Cont√≠nua, Entrega Cont√≠nua** quando necess√°rio.

---

## **Resumo Visual dos Pap√©is**

| Papel                       | Foco Principal | Atua com                              | Responsabilidade-chave                                          |
| --------------------------- | -------------- | ------------------------------------- | --------------------------------------------------------------- |
| **Product Owner**           | Neg√≥cio        | Stakeholders, Time de Desenvolvimento | Maximizar valor e priorizar backlog                             |
| **Scrum Master**            | Processo       | PO, Time, Organiza√ß√£o                 | Garantir que a metodologia seja aplicada e remover impedimentos |
| **Time de Desenvolvimento** | Entrega        | PO, SM                                | Construir incrementos de produto com qualidade                  |

---

# **Metodologia √Ågil ‚Äì Fases do Processo**

A Metodologia √Ågil do Minist√©rio da Educa√ß√£o organiza o ciclo de desenvolvimento de software em **5 fases principais**.
Cada fase √© leve, incremental e conectada aos princ√≠pios e valores √°geis, integrando pr√°ticas DevOps para evitar silos e manter um ritmo constante de entrega.


![texto](./fases.png)

---

## **Vis√£o Geral das Fases**

1. **Prepara√ß√£o** ‚Üí Entender necessidades e criar a vis√£o do produto.
2. **Concep√ß√£o** ‚Üí Detalhar requisitos e criar o backlog.
3. **Constru√ß√£o** ‚Üí Desenvolver incrementos do produto.
4. **Homologa√ß√£o** ‚Üí Validar entregas antes da produ√ß√£o.
5. **Implanta√ß√£o** ‚Üí Colocar incrementos homologados em produ√ß√£o.

---

## **1. Prepara√ß√£o**

**Objetivo:** Transformar necessidades do neg√≥cio em uma **Vis√£o de Produto** clara e inspiradora.

**Atividades-chave:**

* Identificar, mapear e modelar necessidades e oportunidades.
* Nomear o **Gerente de Produto**.
* Criar a **Declara√ß√£o de Vis√£o do Produto** contendo:

  * Por que o produto √© necess√°rio?
  * Benef√≠cios para o requisitante e o neg√≥cio.
  * Estrat√©gias e necessidades que o produto atender√°.
  * Quem ser√£o os usu√°rios.
  * Estado futuro desejado do produto.

**Boas pr√°ticas:**

* Revisar a vis√£o periodicamente em projetos longos.
* Compartilhar a declara√ß√£o com todo o Time √Ågil.

---

## **2. Concep√ß√£o**

**Objetivo:** Detalhar a vis√£o em **Hist√≥rias de Usu√°rio** e criar o **Backlog do Produto**.

**Atividades-chave:**

* Descrever arquitetura preliminar da solu√ß√£o.
* Levantar necessidades funcionais e n√£o funcionais.
* Identificar integra√ß√µes, sistemas impactados e dados necess√°rios.
* Produzir hist√≥rias priorizadas para ciclos de desenvolvimento.

**Sa√≠da principal:** Backlog do Produto pronto para refinamento cont√≠nuo.

---

## **3. Constru√ß√£o**

**Objetivo:** Criar incrementos de valor de forma cont√≠nua e incremental.

**Atividades-chave:**

* Desenvolver itens priorizados no **Sprint Backlog**.
* Implementar c√≥digo, componentes, testes, pacotes e documenta√ß√£o.
* Executar cerim√¥nias do Scrum:

  * Planejamento da Sprint
  * Daily Scrum
  * Revis√£o
  * Retrospectiva
* Garantir qualidade com pr√°ticas √°geis (TDD, BDD, Integra√ß√£o Cont√≠nua).

---

## **4. Homologa√ß√£o**

**Objetivo:** Validar que o incremento atende aos crit√©rios de aceita√ß√£o definidos.

**Atividades-chave:**

* Gerente de Produto realiza valida√ß√£o.
* Registrar defeitos e avaliar causa raiz.
* Garantir que ambiente de homologa√ß√£o seja igual ao de produ√ß√£o.
* Formalizar **Termo de Aceite**.

**Regras importantes:**

* N√£o acumular Sprints sem homologa√ß√£o.
* Seguir a **Defini√ß√£o de Pronto** acordada.

---

## **5. Implanta√ß√£o**

**Objetivo:** Disponibilizar o incremento homologado no ambiente de produ√ß√£o.

**Atividades-chave:**

* Gerente de Produto decide o momento da implanta√ß√£o.
* Interagir com times de QA, opera√ß√µes e infraestrutura.
* Encerrar ciclo e transferir produto para opera√ß√£o e sustenta√ß√£o.

---

## **Resumo Visual das Fases**

| Fase            | Foco Principal             | Sa√≠da Esperada         |
| --------------- | -------------------------- | ---------------------- |
| **Prepara√ß√£o**  | Entender e planejar        | Vis√£o do Produto       |
| **Concep√ß√£o**   | Detalhar requisitos        | Backlog do Produto     |
| **Constru√ß√£o**  | Desenvolver                | Incrementos de Produto |
| **Homologa√ß√£o** | Validar entregas           | Termo de Aceite        |
| **Implanta√ß√£o** | Disponibilizar em produ√ß√£o | Produto em Opera√ß√£o    |


---

# **Scrum ‚Äì Artefatos**

Os **artefatos do Scrum** existem para **garantir transpar√™ncia**, facilitar inspe√ß√£o e permitir adapta√ß√£o ao longo do desenvolvimento.
Eles mostram o **que est√° sendo feito**, **o que j√° foi feito** e **o que falta fazer**.

No Scrum, temos quatro artefatos principais:

1. **Backlog do Produto**
2. **Sprint Backlog**
3. **Incremento**
4. **Defini√ß√£o de Pronto (Definition of Done ‚Äì DoD)**

---

Escrever hist√≥rias no Scrum (ou *user stories*) √© uma pr√°tica essencial para capturar requisitos funcionais do ponto de vista do usu√°rio final. Elas servem para descrever funcionalidades desejadas de forma clara, simples e orientada ao valor entregue.

---

## Como escrever boas hist√≥rias no Scrum

### 1. Estrutura b√°sica da hist√≥ria

A forma cl√°ssica de uma *user story* segue o formato:

> **Como** \[tipo de usu√°rio]
> **Eu quero** \[a√ß√£o ou funcionalidade desejada]
> **Para que** \[benef√≠cio ou valor esperado]

**Exemplo:**

> Como usu√°rio do sistema de compras
> Eu quero poder filtrar produtos por pre√ßo
> Para que eu encontre ofertas mais rapidamente

---

### 2. Caracter√≠sticas das boas hist√≥rias (INVEST)

* **I**ndependente: cada hist√≥ria deve poder ser desenvolvida separadamente.
* **N**egoci√°vel: detalhes podem ser ajustados em colabora√ß√£o com o time.
* **V**aliosa: deve entregar valor para o usu√°rio ou neg√≥cio.
* **E**stim√°vel: o time deve conseguir estimar o esfor√ßo necess√°rio.
* **S**imples (Small): deve ser pequena o suficiente para ser conclu√≠da em um sprint.
* **T**est√°vel: deve ser poss√≠vel validar que a funcionalidade foi entregue.

---

### 3. Crit√©rios de aceita√ß√£o

Junto com a hist√≥ria, sempre liste os **crit√©rios de aceita√ß√£o** que definem as condi√ß√µes que devem ser cumpridas para que a hist√≥ria seja considerada pronta.

**Exemplo:**

* O filtro deve permitir selecionar faixa de pre√ßo m√≠nima e m√°xima.
* O resultado deve mostrar apenas produtos dentro da faixa selecionada.
* O filtro deve funcionar em desktop e mobile.

---

### 4. Dicas pr√°ticas

* **Evite linguagem t√©cnica:** escreva em linguagem simples, entendida por todos.
* **Foque no usu√°rio:** sempre pense em quem vai usar a funcionalidade.
* **N√£o misture hist√≥rias:** evite juntar v√°rias funcionalidades em uma √∫nica hist√≥ria (granularidade).
* **Use exemplos:** incluir cen√°rios ajuda a esclarecer o que deve ser feito.

---

### 5. Exemplo completo

**Hist√≥ria:**
Como cliente da loja virtual
Eu quero salvar meus produtos favoritos
Para que eu possa compr√°-los depois facilmente

**Crit√©rios de aceita√ß√£o:**

* Cliente pode adicionar/remover produtos da lista de favoritos.
* A lista √© persistida entre sess√µes.
* Cliente pode acessar a lista a partir do menu principal.


## **1. Backlog do Produto (Product Backlog)**

üìå **O que √©:**
Lista ordenada de tudo que ser√° necess√°rio no produto. √â a **√∫nica fonte oficial de requisitos** para mudan√ßas.

üìå **Respons√°vel:**
**Product Owner** ‚Äì mant√©m conte√∫do, ordem e disponibilidade.

üìå **Caracter√≠sticas:**

* √â **vivo**: muda conforme o produto e o mercado evoluem.
* Vis√≠vel para **todas as partes interessadas**.
* Refinado continuamente para estar pronto para o **Sprint Planning**.

üìå **Formato dos itens:**

* **Hist√≥rias de Usu√°rio (User Stories)** ‚Üí descrevem funcionalidade na linguagem do usu√°rio final.
* **√âpicos** ‚Üí grupo de hist√≥rias de usu√°rio relacionadas, formando partes maiores do produto.
* **Temas** ‚Üí cole√ß√£o de √©picos com um objetivo comum.

üìå **Boas pr√°ticas para Hist√≥rias de Usu√°rio (INVEST):**

* **I**ndependente ‚Üí n√£o depende de outras hist√≥rias.
* **N**egoci√°vel ‚Üí detalhes definidos junto ao time.
* **V**aliosa ‚Üí entrega valor ao cliente.
* **E**stim√°vel ‚Üí clara e poss√≠vel de estimar.
* **S**mall (Pequena) ‚Üí vi√°vel de entregar na Sprint.
* **T**est√°vel ‚Üí poss√≠vel de validar com testes.

---

## **2. Sprint Backlog**

üìå **O que √©:**
Conjunto de itens do **Backlog do Produto** selecionados para a Sprint, com o plano para entregar o incremento e atingir o objetivo da Sprint.

üìå **Respons√°vel:**
**Time de Desenvolvimento** ‚Äì planeja como entregar.

üìå **Caracter√≠sticas:**

* Criado na **Sprint Planning**.
* Itens do backlog s√£o **quebrados em tarefas** com estimativa de esfor√ßo.
* Pode mudar **apenas** dentro da Sprint para se ajustar ao objetivo.
* Permite medir velocidade e capacidade do time.

üìå **T√©cnica de prioriza√ß√£o sugerida:**
**MoSCoW** ‚Üí

* **M**ust have (Obrigat√≥rio)
* **S**hould have (Importante)
* **C**ould have (Desej√°vel)
* **W**on‚Äôt have (N√£o ser√° inclu√≠do agora)

---

## **3. Incremento**

üìå **O que √©:**
Soma de todos os itens do backlog conclu√≠dos na Sprint + valor dos incrementos anteriores.

üìå **Caracter√≠sticas:**

* Deve estar **em condi√ß√£o utiliz√°vel**, mesmo que n√£o seja liberado.
* Representa **valor real** entregue.
* Avaliado na **Sprint Review** (homologa√ß√£o).

üí° √â a **prova pr√°tica** do empirismo do Scrum: decis√µes futuras devem se basear no que j√° foi entregue.

---

## **4. Defini√ß√£o de Pronto (Definition of Done ‚Äì DoD)**

üìå **O que √©:**
Acordo claro sobre o que significa ‚Äúpronto‚Äù para o time e stakeholders.

üìå **Import√¢ncia:**

* Garante **transpar√™ncia** e evita interpreta√ß√µes diferentes.
* Deve ser definida na **primeira Sprint**.
* Impacta estimativas e o pipeline de desenvolvimento.

üìå **Benef√≠cios:**

* Evita retrabalho.
* Define crit√©rios claros de qualidade.
* Permite valida√ß√£o objetiva do trabalho.

---

![alt text](hist.png)

---
## **Resumo Visual dos Artefatos**

| Artefato                | Objetivo Principal                                 | Respons√°vel             |
| ----------------------- | -------------------------------------------------- | ----------------------- |
| **Backlog do Produto**  | Centralizar e priorizar tudo que o produto precisa | Product Owner           |
| **Sprint Backlog**      | Organizar o trabalho da Sprint                     | Time de Desenvolvimento |
| **Incremento**          | Entregar valor utiliz√°vel                          | Time de Desenvolvimento |
| **Defini√ß√£o de Pronto** | Garantir qualidade e transpar√™ncia                 | Todo o Time Scrum       |

---

![texto](./img_scrum.png)


---

# **Cerim√¥nias do Scrum ‚Äì Guia Detalhado**

## **O que s√£o cerim√¥nias**

No Scrum, chamamos de ‚Äúcerim√¥nias‚Äù as reuni√µes formais que **estruturam o ciclo de desenvolvimento**.
Elas servem para:

* Definir **o que ser√° feito** e **como ser√° feito**.
* Sincronizar a equipe.
* Demonstrar progresso para as partes interessadas.
* Melhorar continuamente o processo e o produto.

As cerim√¥nias tamb√©m t√™m um efeito psicol√≥gico importante: **celebrar conquistas** e **refor√ßar o comprometimento** do time.

---

## **1. Sprint ‚Äì O Ciclo Central**

A Sprint √© o **cora√ß√£o** do Scrum. √â um per√≠odo fixo (time-box) durante o qual um **incremento potencialmente utiliz√°vel** do produto √© criado.

**Caracter√≠sticas principais:**

* **Dura√ß√£o:** 2 a 4 semanas, mesmo tamanho durante todo o projeto.
* **In√≠cio e fim fixos:** N√£o h√° ‚Äúpausa‚Äù entre uma Sprint e outra.
* **Entrega:** Sempre deve resultar em algo que **possa** ser entregue ao cliente (mesmo que a decis√£o de colocar em produ√ß√£o seja do Product Owner).

**Componentes dentro da Sprint:**

* **Planejamento (Sprint Planning)**
* **Execu√ß√£o di√°ria (Daily Meetings)**
* **Apresenta√ß√£o de resultados (Sprint Review)**
* **An√°lise e melhorias (Sprint Retrospective)**

**Regras importantes:**

1. Timebox de 2 a 4 semanas.
2. Releases (conjuntos de sprints) t√™m no m√°ximo 4 sprints.
3. Escopo definido no planejamento n√£o muda sem acordo de todos.
4. Cancelamento s√≥ pelo **PO** e apenas se a meta da Sprint perder sentido.
5. Toda Sprint deve ter in√≠cio e t√©rmino claros.

**Boas pr√°ticas:**

* Se o escopo do projeto muda com frequ√™ncia, prefira **sprints curtas** (2 semanas).
* Se h√° estabilidade e boa previsibilidade, **sprints mais longas** (3-4 semanas) podem gerar mais efici√™ncia.
* Evitar variar a dura√ß√£o para n√£o distorcer m√©tricas como a **velocidade do time** (Velocity Chart).

**Exemplo pr√°tico:**

> Um time de desenvolvimento de aplicativo define Sprints de 2 semanas.
> Na Sprint 1, o objetivo √© implementar a tela de login e autentica√ß√£o.
> Ao final, mesmo que o app ainda n√£o esteja completo, essa funcionalidade j√° poderia ser colocada em produ√ß√£o.

---

## **2. Sprint Planning ‚Äì Planejamento da Sprint**

Reuni√£o onde o **PO** e o **Time de Desenvolvimento**, facilitados pelo **Scrum Master**, decidem **o que ser√° feito** e **como ser√° feito** na Sprint.

**Quando:** Primeiro dia da Sprint.
**Timebox:** At√© 8h para sprints de 1 m√™s (propor√ß√£o 30:1).

**Entradas necess√°rias:**

* **Product Backlog** atualizado e priorizado.
* Clareza sobre requisitos e crit√©rios de aceite.
* Capacidade do time (quantidade de trabalho que conseguem entregar).

**Etapas:**

1. **Parte 1 ‚Äì O que ser√° feito:**

   * PO apresenta os itens mais priorit√°rios do backlog.
   * Time tira d√∫vidas e entende as expectativas.
   * Define-se o **Sprint Goal** (meta que explica o valor da sprint).
2. **Parte 2 ‚Äì Como ser√° feito:**

   * Time quebra os itens selecionados em tarefas menores.
   * Faz estimativas de esfor√ßo (story points, horas, etc.).
   * Forma-se o **Sprint Backlog**.

**Boas pr√°ticas:**

* Ter o backlog refinado antes da Planning.
* Evitar discuss√µes excessivamente t√©cnicas na reuni√£o (podem ser resolvidas depois).
* Garantir que todos entendam o **Sprint Goal**.
* Sempre considerar feriados, f√©rias e outras aus√™ncias na capacidade.

**Riscos comuns:**

* Backlog mal priorizado ‚Üí Sprint sem foco.
* Itens mal definidos ‚Üí aumento de retrabalho.
* Time assumir mais do que pode entregar ‚Üí queda de credibilidade.

---

## **3. Daily Meeting ‚Äì Reuni√£o Di√°ria**

Encontro r√°pido para **sincronizar** as atividades do time.

**Quando:** Todos os dias, mesmo hor√°rio e local.
**Dura√ß√£o:** M√°x. 15 minutos (em p√©, se presencial).

**Objetivo:**

* Garantir que todos saibam **o que est√° acontecendo**.
* Identificar impedimentos rapidamente.

**Formato cl√°ssico ‚Äì 3 perguntas:**

1. O que fiz desde a √∫ltima Daily?
2. O que farei at√© a pr√≥xima Daily?
3. Existe algo me impedindo?

**Regras:**

* Foco no **planejamento das pr√≥ximas 24h**.
* N√£o entrar em discuss√µes t√©cnicas (essas s√£o levadas para depois com as pessoas envolvidas).
* Time fala para o pr√≥prio time, n√£o para o PO ou Scrum Master.

**Papel do Scrum Master:** Garantir que ocorra e que impedimentos sejam resolvidos.
**Papel do PO:** Participa√ß√£o opcional.

**Erros comuns:**

* Transformar a Daily em presta√ß√£o de contas ao PO.
* Demorar demais ou come√ßar atrasado.
* Discutir problemas complexos durante a reuni√£o.

---

## **4. Sprint Review ‚Äì Revis√£o da Sprint**

Reuni√£o no final da Sprint para **mostrar o que foi feito** e receber feedback.

**Quando:** √öltimo dia da Sprint.
**Dura√ß√£o:** M√°x. 4h para sprint de 30 dias.

**Objetivos:**

* Apresentar o incremento pronto.
* Ajustar roadmap se necess√°rio.
* Criar alinhamento com stakeholders.

**Conte√∫do da reuni√£o:**

* Comparar planejado x realizado.
* Mostrar funcionalidades prontas.
* Apresentar impedimentos e como foram tratados.
* Esbo√ßar objetivos da pr√≥xima sprint.

**Boas pr√°ticas:**

* Fazer demonstra√ß√£o pr√°tica do produto.
* Ter ambiente preparado (build funcional, dados de teste).
* Estimular feedback ativo das partes interessadas.

**Riscos comuns:**

* Tratar como ‚Äúdemonstra√ß√£o interna‚Äù e n√£o envolver o cliente.
* Falta de transpar√™ncia sobre o que n√£o foi entregue.

---

## **5. Sprint Retrospective ‚Äì Retrospectiva**

Reuni√£o final para **refletir sobre o processo** e definir melhorias.

**Quando:** Ap√≥s a Sprint Review, antes da pr√≥xima Sprint Planning.
**Participantes:** Todo o time Scrum.

**Objetivo:**

* Identificar pontos fortes e fracos.
* Definir plano de a√ß√£o para a pr√≥xima Sprint.

**Formato comum:**

* Levantar o que **funcionou bem**, o que **n√£o funcionou** e o que **pode ser melhorado**.
* Priorizar a√ß√µes concretas (com respons√°vel e prazo).

**Boas pr√°ticas:**

* Criar ambiente seguro para sinceridade.
* Usar din√¢micas variadas para evitar monotonia.
* Registrar e acompanhar se as melhorias est√£o sendo implementadas.

**Riscos comuns:**

* Apontar melhorias abstratas sem a√ß√µes concretas.
* Focar em problemas fora do controle do time.
* Cair na repeti√ß√£o sem inova√ß√£o no formato.

---

## Matriz de atribui√ß√µes e responsabilidades 

![texto](./mapa_atrib.png)


## Matriz do Processo

![texto](./processo.png)

